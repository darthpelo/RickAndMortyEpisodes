# SwiftLint Configuration for Rick and Morty Episodes App
# Enforce code quality and consistency across the project

# Directories to exclude from linting
excluded:
  - .build
  - .swiftpm
  - DerivedData
  - Build
  - Carthage
  - Pods
  - vendor
  - RickAndMortyEpisodes.xcodeproj
  # Exclude all test files and mocks
  - RickAndMortyEpisodesTests
  - "**/*Tests.swift"
  - "**/*Test.swift" 
  - "**/Mock*.swift"
  - "**/TestUtils"

# Enable additional rules beyond the default set
opt_in_rules:
  - array_init
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - empty_collection_literal
  - empty_count
  - empty_string
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - first_where
  - force_unwrapping
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - prohibited_super_call
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - sorted_first_last
  - sorted_imports
  - static_operator
  - toggle_bool
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition

# Disable specific rules that might be too strict for this project
disabled_rules:
  - todo # Allow TODO comments for development
  - identifier_name # Allow short names like 'id', 'vm'

# Configure specific rules
line_length:
  warning: 140  # Increased for localization strings
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

function_body_length:
  warning: 50
  error: 100

function_parameter_count:
  warning: 6
  error: 8

type_body_length:
  warning: 300
  error: 500

file_length:
  warning: 500
  error: 1000

cyclomatic_complexity:
  warning: 10
  error: 20

nesting:
  type_level:
    warning: 2
    error: 3

# Force unwrapping configuration
force_unwrapping:
  severity: error

# Trailing whitespace
trailing_whitespace:
  ignores_empty_lines: false
  ignores_comments: true

# Custom rules for project-specific conventions
custom_rules:
  # Ensure ViewModels follow naming convention (exclude Managers and Services)
  viewmodel_naming:
    name: "ViewModel Naming Convention"
    regex: 'class\s+(?!.*(?:Manager|Service))\w*(?<!ViewModel):\s*.*ObservableObject'
    message: "Classes conforming to ObservableObject should end with 'ViewModel' (excludes Managers and Services)"
    severity: warning

# Reporter type (xcode shows warnings in Xcode, emoji for terminal)
reporter: "xcode" # Test change
